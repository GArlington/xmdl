#summary XMDL Modeling Guide
#labels Phase-Support,Draft

== Introduction ==

This page is a step-by-step guide to modeling with XMDL. This guide does not intend to guide you through deep coding practice on the generated code. You can refer the specific platforms guide if you are interested in the platform details. Please follow the steps below to model and generate code for a sample application. 

== Sample Model ==

This guide aims to introduce XMDL Modeling basics using a sample model. This sample model consists of a simple library model that contains 
 * Book class - Identifying books classified by their authors and types
 * Author class - Identifying author of a book. Author class has a many-to-many relation with Book class.
 * !BookType enumeration - Identifying the type of a book

== Modeling Perspective ==

After a successful installation following the [Installation installation guide], XMDL Modeling Perspective should be activated. By default, layout of the perspective should have the following components:

 # Navigator Pane
 # Editor Space
 # Outline Pane
 # Properties Editor

   http://xmdl.googlecode.com/svn/wiki/Installation/0100.png

== Creating Model ==

 * Using File -> New -> Project... menu item you can start the new project wizard.
 * Select XMDL -> XMDL Java Project from the tree and click next.
   http://xmdl.googlecode.com/svn/wiki/Installation/0110.png
 * Type name of the project and (if necessary) specify project location and JRE to use. It is recommended to use the "Create separate folders for sources and class files" for project layout. Click next.
   http://xmdl.googlecode.com/svn/wiki/Installation/0120.png
 * On the next page, do not alter the source code location, since "src" is the default target location for the generated codes. Click Finish to finish the project creation wizard.
   http://xmdl.googlecode.com/svn/wiki/Installation/0130.png
 * When wizard is finished, you should have the following project layout automatically created.
   http://xmdl.googlecode.com/svn/wiki/Installation/0140.png


*TODO*
 * Define package
 * Define class
 * Define attributes to the class
 * Define an Enumeration
   * Define Enumeration Literals
 * Modeling Associations
   * Define another (associated) class & attributes
   * Define association references

== Code Generation ==

*TODO*
  * Initialization (optional), this step may be totally removed from the tutorial. Only makes sense for the advanced user.
    * Introduce initialized models & XMDL.DB Model
  * Code Generation
  * Overview of the generated sources
  * Making changes, and re-generating code. Introduce merge strategy.
    * @generated tag
    * @keep tag