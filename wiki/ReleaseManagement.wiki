#summary Tips about release management
#labels Phase-QA

== Release checklist ==

*_This checklist should be applied, on each release._*

  # Update local copy to final version from source repository
  # Run unit tests without any problems
  # Error free build of binary packages
  # Deploy binary packages (plugins) on Eclipse, and check for any visible problems
  # Tag source repository
  # Upload released package on site, and specify necessary labels
  # Clear labels for old packages on project "Downloads" page.
  # Make changes on [Roadmap Roadmap page] if necessary. (e.g. link to download URL)

== Building a distribution ==

For building a distribution, simply run [http://xmdl.googlecode.com/svn/trunk/xmdl.lib/build.xml this ant build] script. This script needs a build configuration file located in *${user.home}/xmdl.build.properties*. You can locate a sample of the file [http://xmdl.googlecode.com/svn/trunk/xmdl.lib/ here].

Distribution files will be created in *xmdl.lib/dist/* folder.

== Tagging Source Repository ==

When a distribution (not valid for alpha and beta distributions) is delivered, the source repository is tagged using the SVN tag command.

Following command can be used for this purpose.

{{{
>svn copy https://xmdl.googlecode.com/svn/trunk/ \
          https://xmdl.googlecode.com/svn/tags/<tag_name> \
          -m "Tagging the <version_number> release" \
          --username <your_SVN_username>
}}}
where <tagname> can be something like release-x.y.z considering the version number.

Sample:

{{{
>svn copy https://xmdl.googlecode.com/svn/trunk/ \
          https://xmdl.googlecode.com/svn/tags/release-0.5 \
          -m "Tagging the 0.5.0 release" \
          --username hakandilek
}}}
 
 
 
 