#summary XMDL Developer's Guide
#labels Draft,Phase-Implementation

== Introduction ==

This guide intends to contain brief information for XMDL developers. 

== Development Environment Setup ==

You would need to install the following software components for XMDL development:

====== Install Eclipse Classic 3.3.x ======

   * Download and unzip [http://www.eclipse.org/downloads/moreinfo/classic.php Eclipse Classic] 3.3.x (includes PDE), 

====== Download and install necessary plugins ======

   * Download [http://xmdl.googlecode.com/svn/trunk/xmdl.update/Bookmarks-dev.xml update site bookmark file], and save to a local folder
   * Run eclipse using a clean workspace
   * Go to menu Help -> Software Updates -> Find and Install
   * Select "Search for new Features to install", click next
   * Click "Import Sites...", select bookmark file you've downloaded.
   * Select the following from the list, click Finish;
     * Europa Discovery Site
     * Subclipse update for 1.2.x
     * XMDL Update Sites
   * Select mirrors if promted
   * Select the following features to be installed, then click Next
     * Europa Discovery Site/Models and Model Development
       * Eclipse Modeling Framework (EMF) Runtime + End-User Tools 2.3.1.x
       * Eclipse Modeling Framework (EMF) Extender SDK 2.3.1.x
       * Java Emitter Templates (JET) (Incubation) 0.8.1.x
       * Java Emitter Templates (JET) SDK (Incubation) 0.8.1.x
     * Subclipse update for 1.2.x/Subclipse Plugin
       * Subclipse 1.2.x
     * XMDL Update Sites/XMDL Development Updates
       * XMDL Universal Code Generator 0.6.x
   * Accept license agreement, click Next and Finish
   * Install all components and restart eclipse when installation is finished.

====== Checkout xmdl components from SVN repository ======

When installation is complete, add XMDL project components into your workspace. 
_It is recommended to setup a separate workspace in Eclipse containing the following XMDL components_

 * Click menu item File -> Project,
 * Select SVN -> Checkout Projects from SVN, click Next,
 * Select "Create a new repository location", click Next,
 * Enter "https://xmdl.googlecode.com/svn/trunk/" for URL, click Next,
 * Select the following folders on tree;
   * xmdl/
   * xmdl.core/
   * xmdl.corelib/
   * xmdl.gen/
   * xmdl.genext/
   * xmdl.genext.test/
   * xmdl.lib/
   * xmdl.ida/
   * xmdl.ui/
   * xmdl.update/
   * xmdlbo.ui/
   * xmdldb.ui/
   * xmdlgen.ui/
 * Click Finish
 * Perform this step for the wiki/ folder under https://xmdl.googlecode.com/svn/wiki/ if you would like to follow wiki changes inside Eclipse IDE.
 
You can find [XMDLComponents here] details and inter-dependencies of the XMDL Components
    
== Platform Development ==

This chapter explains details for introducing a new target platform, or changing currently defined platforms.

=== Plugin Extension Point ===

Each platform is defined as an Eclipse plugin. A platform plugin uses the "xmdl.gen.registry" extension point to register itself as a plugin. Thus, code generation can be performed for this plugin via the editors context menu.

*xmdl.gen.registry* extension point has the following configuration markup:
{{{
<!ELEMENT extension (platform+)>
<!ATTLIST extension
    point CDATA #IMPLIED
    id    CDATA #IMPLIED
    name  CDATA #IMPLIED>

 <!--
    id - Unique extension id 
    name - Name of extension
 --> 

<!ELEMENT platform EMPTY>
<!ATTLIST platform
    name    CDATA #REQUIRED
    version CDATA #REQUIRED
    class   CDATA #REQUIRED>


 <!--
    name - Name of the platform 
    version - Platform version 
    class - Implementation class name 
 -->
}}}
 
An [http://help.eclipse.org/help32/index.jsp?topic=/org.eclipse.pde.doc.user/guide/tools/editors/manifest_editor/extension_points.htm extension point] must be defined in the platform's plugin.xml file. You can use a simple text editor or the [http://help.eclipse.org/help32/topic/org.eclipse.pde.doc.user/guide/tools/editors/manifest_editor/editor.htm Plug-in manifest editor] to add a platform definition.

Here is a sample extension point definition:
{{{
    <extension
         id="xmdl.core"
         name="XMDL Core Platform"
         point="xmdl.gen.register">
      <platform
            class="chrome.xmdl.core.platform.XmdlCorePlatform"
            name="Cekirdek"
            version="0.5.0"/>
   </extension>
}}}  

{{{
TODO: Adding Templates
TODO: Defining Tasks
TODO: Init structure
}}}

 
 
 
 
 