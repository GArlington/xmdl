<%@ jet 
    package="chrome.xmdl.core.templates.model.impl" 
    imports="java.util.* 
            chrome.xmdl.*
            chrome.xmdl.gen.util.*
            org.eclipse.emf.codegen.util.*"
    class="EnumerationTemplateImpl" 
%><%
    XEnumeration enumeration = (XEnumeration) argument;
    XPackage xPackage = enumeration.getXPackage(); 
    ClassHelper helper = XMDLClassHelper.INSTANCE;
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");    
    %>
<%ImportManager importManager=null;%>
<%if (helper.getQualifiedName(xPackage) != null) {%>
<%importManager = helper.makeImportManager(helper.getQualifiedName(xPackage));%>
package <%=helper.getQualifiedName(xPackage)%>.model;
<%} else {%>
<%importManager = helper.makeImportManager("");%>
<%}%>

<%importManager.addImport("org.apache.commons.beanutils.ConvertUtils");%>
<%importManager.addImport("chrome.xmdl.lib.dao.*");%>
<%importManager.addImport("chrome.xmdl.lib.helper.*");%>
<%
    StringBuffer importStringBuffer = stringBuffer;
    int importInsertionPoint = stringBuffer.length();
    importManager.addCompilationUnitImports(stringBuffer.toString());
%>
/** 
 * $Id$
 * Created: 15.Þub.2006 08:22:32
 *
 * @author hd
 * @generated
 */
public class <%=helper.getCapName(enumeration)%> extends PersistentEnum {

<%for (Iterator<XEnumerationLiteral> i= enumeration.getLiterals().iterator(); i.hasNext();) {
    XEnumerationLiteral l = (XEnumerationLiteral) i.next();%>
    /**
     * @generated
     */ 
    public static final <%=helper.getCapName(enumeration)%> <%=l.getName()%> = new <%=helper.getCapName(enumeration)%>("<%=l.getName()%>", <%=l.getValue()%>);

<%}//for%>

    /**
     * @generated
     */ 
    private <%=helper.getCapName(enumeration)%>(String name, int ordinal) {
        super(name, ordinal);
    }

    /**
     * @generated
     */ 
    public static <%=helper.getCapName(enumeration)%> valueOf(String name) {
        <%=helper.getCapName(enumeration)%> enm = (<%=helper.getCapName(enumeration)%>) get(<%=helper.getCapName(enumeration)%>.class, name);
        if (enm == null) {
            throw new Error("<%=helper.getCapName(enumeration)%> for Name = " + name + " not defined");
        }
        return enm;
    }

    /**
     * @generated
     */ 
    public static <%=helper.getCapName(enumeration)%> valueOf(int value) {
        <%=helper.getCapName(enumeration)%> enm = (<%=helper.getCapName(enumeration)%>) get(<%=helper.getCapName(enumeration)%>.class, value);
        if (enm == null) {
            throw new Error("<%=helper.getCapName(enumeration)%> for Value = " + value + " not defined");
        }
        return enm;
    }    

    /**
     * @generated
     */ 
    static {
        ConvertUtils.register(new EnumerationConverter(), <%=helper.getCapName(enumeration)%>.class);
    }

} 
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>