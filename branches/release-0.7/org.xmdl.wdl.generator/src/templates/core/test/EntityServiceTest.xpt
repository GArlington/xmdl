«IMPORT wdl»

«EXTENSION templates::Extensions»
«EXTENSION templates::IDAExtensions»

«DEFINE entity FOR wdl::Entity»
  «FILE "test/java/" + this.project().basePackagePath() + "/service/impl/"+ this.name + "ManagerImplTest.java" TO_CORE_SRC-»
package «this.basePackageName()».service.impl;

import java.util.*;
import «this.basePackageName()».model.*;
import «this.basePackageName()».model.search.*;
import org.jmock.Mock;
import org.xmdl.ida.lib.test.BaseManagerMockTestCase;
import «this.basePackageName()».dao.*;

/**
 *
 * «this.name» Service Implementation Test
 *  
 * $Id$
 *
 */ 
public class «this.name»ManagerImplTest extends BaseManagerMockTestCase {

    private «this.name»ManagerImpl manager = null;

    private Mock dao = null;

    private «this.name» «this.name.toFirstLower()» = null;

    protected void setUp() throws Exception {
        dao = new Mock(«this.name»DAO.class);
        manager = new «this.name»ManagerImpl((«this.name»DAO) dao.proxy());
    }

    protected void tearDown() throws Exception {
        manager = null;
    }

    public void testGet() {
        log.debug("testing get");

        Long id = 7L;
        «this.name.toFirstLower()» = new «this.name»();

        // set expected behavior on DAO
        dao.expects(once()).method("get")
                .with(eq(id))
                .will(returnValue(«this.name.toFirstLower()»));

        «this.name» result = manager.get(id);
        assertSame(«this.name.toFirstLower()», result);
    }

    public void testGetAll() {
        log.debug("testing getAll");

        List<«this.name»> list = new ArrayList<«this.name»>();

        // set expected behavior on dao
        dao.expects(once()).method("getAll")
                .will(returnValue(list));

        List<«this.name»> result = manager.getAll();
        assertSame(list, result);
    }

    public void testSearch() {
        log.debug("testing search");

        List<«this.name»> list = new ArrayList<«this.name»>();
        «this.name»Search searchBean=new «this.name»Search();

        // set expected behavior on DAO
        dao.expects(once()).method("search")
                .with(eq(searchBean))
                .will(returnValue(list));

        Collection<«this.name»> result = manager.search(searchBean);
        assertSame(list, result);
    }

    public void testSave() {
        log.debug("testing save");

        «this.name.toFirstLower()» = new «this.name»();

        // set expected behavior on DAO
        dao.expects(once()).method("save")
                .with(same(«this.name.toFirstLower()»))
                .will(returnValue(«this.name.toFirstLower()»));

        manager.save(«this.name.toFirstLower()»);
    }

    public void testRemove() {
        log.debug("testing remove");

        Long id = 11L;
        «this.name.toFirstLower()» = new «this.name»();

        // set expected behavior on DAO
        dao.expects(once()).method("remove")
                .with(eq(id))
                .isVoid();

        manager.remove(id);
    }

    «PROTECT CSTART '/*' CEND '*/' ID this.name + ".svc.t.bdy" »
    //This is the protected region that will not be overwritten on generation
    «ENDPROTECT»
}
«ENDFILE-»
«ENDDEFINE»
