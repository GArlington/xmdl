<xc\:accessor\ attribute\="$attribute"/>	get\u00abattribute.name.toFirstUpper()\u00bb
<xc\:uncap\ element\="$attribute"/>	\u00abattribute.name.toFirstLower()\u00bb
<xc\:cap\ element\="$attribute"/>	\u00abattribute.name.toFirstUpper()\u00bb
<xc\:uncap\ element\="$class"/>	\u00abthis.name.toFirstLower()\u00bb
<xc\:cap\ element\="$class"/>	\u00abthis.name\u00bb
<c\:iterate\ select\="$class/attributes"\ var\="attribute">	\u00abFOREACH this.attributes AS attribute\u00bb
<c\:if\ test\="not(isEmbeded($attribute/type))">	\u00abIF!attribute.isEmbed()\u00bb
<c\:if\ test\="isEmbeded($attribute/type)">	\u00abIF attribute.isEmbed()\u00bb
<c\:if\ test\="isEmbeded($attribute)">	\u00abIF attribute.isEmbed()\u00bb
</c\:if>	\u00abENDIF\u00bb
</c\:iterate>	\u00abENDFOREACH\u00bb
<c\:if\ test\="not(call($attribute,\ 'isReference'))">	\u00abIF !attribute.isReference()\u00bb
<c\:if\ test\="not(call($attrib,\ 'isReference'))">	\u00abIF !attrib.isReference()\u00bb
<c\:iterate\ select\="$package/classes"\ var\="class">	\u00abFOREACH this.types.typeSelect(Entity) AS entity\u00bb
<xc\:qualifiedName\ element\="$package"/>	org.xmdl.taslak
<xm\:isChild\ element\="$class">	\u00abIF this.isChild()\u00bb
</xm\:isChild>	\u00abENDIF\u00bb
<xm\:masterClassName\ element\="$class"/>	\u00abthis.master().name\u00bb
<xc\:mutator\ attribute\="$attribute"/>	set\u00abattribute.name.toFirstUpper()\u00bb
<xc\:cap\ element\="$attribute/type"/>	\u00abattribute.type.name\u00bb
org.xmdl.taslak	\u00abthis.project.basePackage\u00bb
<xc\:qualifiedName\ element\="$dTable/xClass"/>	\u00abentity.name\u00bb
<c\:get\ select\="$dTable/@name"/>	\u00abentity.tableName()\u00bb
<c\:iterate\ select\="$dTable/dFields"\ var\="field">	\u00abFOREACH entity.attributes AS attribute\u00bb
<c\:if\ test\="not(call($field/xAttribute,\ 'isReference'))">	\u00abIF !attribute.isReference()\u00bb
<c\:get\ select\="$field/@name"/>	\u00abattribute.columnName()\u00bb
<c\:if\ test\="isEmbeded($field/xAttribute)">	\u00abIF attribute.isEmbed()\u00bb
<xc\:iterateAttributes\ select\="$attribute/type"\ var\="attrib">	\u00abFOREACH attribute.type.eContents.typeSelect(Attribute) AS attrib\u00bb
</xc\:iterateAttributes>	\u00abENDFOREACH\u00bb
<xc\:mutator\ attribute\="$attrib"/>	set\u00abattrib.name.toFirstUpper()\u00bb
<xm\:isMaster\ element\="$attribute">	\u00abIF attribute.isEmbed()\u00bb
</xm\:isMaster>	\u00abENDIF\u00bb
</ida\:isEntityReference>	\u00abENDIF\u00bb
<ida\:isEntityReference\ attribute\="$field/xAttribute">	\u00abIF attribute.isFromMany()\u00bb
<tu\:randomPlain\ attribute\="$attrib"\ format\="yyyy-MM-dd"\ variant\="1"/>	\u00abattribute.randomize("1", "yyyy-MM-dd")\u00bb
<tu\:randomPlain\ attribute\="$attrib"\ format\="yyyy-MM-dd"\ variant\="2"/>	\u00abattribute.randomize("2", "yyyy-MM-dd")\u00bb
<tu\:randomPlain\ attribute\="$attrib"\ format\="yyyy-MM-dd"\ variant\="3"/>	\u00abattribute.randomize("3", "yyyy-MM-dd")\u00bb
<xc\:qualifiedName\ element\="$project"/>	\u00abproject.name\u00bb
