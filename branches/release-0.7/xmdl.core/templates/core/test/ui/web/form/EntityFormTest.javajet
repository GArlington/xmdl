<%@ jet 
    package="org.xmdl.core.templates.test.ui.web.form.impl" 
    imports="java.util.* 
            org.xmdl.xmdl.* 
            org.xmdl.gen.util.*
            org.eclipse.emf.codegen.util.*"
    class="EntityFormTestImpl" 
%><%
    XClass xClass = (XClass) argument;
    XPackage xPackage = xClass.getXPackage();
    ClassHelper helper = XMDLClassHelper.INSTANCE;
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");    
    %>
<%ImportManager importManager=null;%>
<%if (helper.getQualifiedName(xPackage) != null) {%>
<%importManager = helper.makeImportManager(helper.getQualifiedName(xPackage));%>
package <%=helper.getQualifiedName(xPackage)%>.ui.web.form;
<%} else {%>
<%importManager = helper.makeImportManager("");%>
<%}%>

<%importManager.addImport(xPackage.getName() + ".model.*");%>
<%importManager.addImport("junit.framework.*");%>

<%
    StringBuffer importStringBuffer = stringBuffer;
    int importInsertionPoint = stringBuffer.length();
    importManager.addCompilationUnitImports(stringBuffer.toString());
%>

/** 
 * $Id$
 * @generated
 */
public class <%=helper.getCapName(xClass)%>FormTest extends TestCase {

	/** 
	 * @generated
	 */
    public void testBean() {
        <%=helper.getCapName(xClass)%>Form form = new <%=helper.getCapName(xClass)%>Form();
        <%=helper.getCapName(xClass)%> bean = form.get<%=helper.getCapName(xClass)%>();

        assertNotNull(bean);        
<%for (Iterator<XAttribute> i= xClass.getAttributes().iterator(); i.hasNext();) {
    XAttribute attribute = (XAttribute) i.next();%>
<%if (attribute.getType() != null) {%>
    	assertEquals(<%=helper.getDefaultValue(attribute)%>, bean.<%=helper.getGetAccessor(attribute)%>());
<%}%>
<%}%>
    }

	/** 
	 * @generated
	 */
    public void testSearchBean() {
        <%=helper.getCapName(xClass)%>Form form = new <%=helper.getCapName(xClass)%>Form();
        <%=helper.getCapName(xClass)%>Search search = form.get<%=helper.getCapName(xClass)%>Search();

        assertNotNull(search);
        
<%for (Iterator<XAttribute> i= xClass.getAttributes().iterator(); i.hasNext();) {
    XAttribute attribute = (XAttribute) i.next();
    XType type = attribute.getType();
    %>
<%if (type != null && !attribute.isReference()) {%>
	<%if (type.isComparable()) {%>
    	assertEquals(<%=helper.getDefaultValue(attribute)%>, search.<%=helper.getGetAccessor(attribute)%>Min());
    	assertEquals(<%=helper.getDefaultValue(attribute)%>, search.<%=helper.getGetAccessor(attribute)%>Max());
	<%} else {%>
    	assertEquals(<%=helper.getDefaultValue(attribute)%>, search.<%=helper.getGetAccessor(attribute)%>());
	<%}%>
<%}%>
<%}%>
    }

	/** 
	 * @generated
	 */
    public void testDelete() {
        <%=helper.getCapName(xClass)%>Form form = new <%=helper.getCapName(xClass)%>Form();
        Long[] deleteID = form.getDeleteID();

        assertNotNull(deleteID);
        assertEquals(0, deleteID.length);
    }

	/** 
	 * @generated
	 */
    public void testReset() {
        testBean();
        testSearchBean();
        testDelete();
    }
    
}
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>
