<%@ jet 
	package="org.xmdl.core.templates.ui.web.impl" 
	imports="org.xmdl.xmdl.*
			org.xmdl.gen.util.*
			org.eclipse.emf.codegen.util.*
			"
	class="ParameterKeysImpl" 
%><%
	XPackage xPackage = (XPackage) argument;	
	ClassHelper helper = XMDLClassHelper.INSTANCE;
	
%>
<%ImportManager importManager=null;%>
<%if (helper.getQualifiedName(xPackage) != null) {%>
<%importManager = helper.makeImportManager(helper.getQualifiedName(xPackage));%>
package <%=helper.getQualifiedName(xPackage)%>.ui.web.action;
<%} else {%>
<%importManager = helper.makeImportManager("");%>
<%}%>

<%importManager.addImport(xPackage.getName() + ".model.*");%>
<%
    StringBuffer importStringBuffer = stringBuffer;
    int importInsertionPoint = stringBuffer.length();
    importManager.addCompilationUnitImports(stringBuffer.toString());
%>

/**
 * $Id$
 * Created: 17.ï¿½ub.2006 13:28:22
 *
 * @author hd
 * @generated
 */
public interface ParameterKeys {


<%for (Object xo : xPackage.getClasses()) {
XClass xClass=(XClass)xo;%>
   /**
     * The request scope attribute that holds the {@link <%=xClass.getName()%>} form.
	 * @generated 
     */
    public static final String <%=helper.capAllName(xClass.getName())%>_FORM = "<%=helper.uncapSafeName(xClass)%>Form";

    /**
     * The request scope attribute that holds the {@link <%=xClass.getName()%>} list
	 * @generated 
     */
    public static final String <%=helper.capAllName(xClass.getName())%>_LIST = "<%=helper.uncapSafeName(xClass)%>List";

    /**
     * The request scope attribute that holds the {@link <%=xClass.getName()%>} entity.
	 * @generated 
     */
    public static final String <%=helper.capAllName(xClass.getName())%>_ENTITY = "<%=helper.uncapSafeName(xClass)%>Entity";
    
    /**
     * The request scope attribute that holds the {@link Book} ID.
	 * @generated
     */
    public static final String <%=helper.capAllName(xClass.getName())%>_ID = "<%=helper.uncapSafeName(xClass)%>ID";
    
<%}%>

 
}
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>
