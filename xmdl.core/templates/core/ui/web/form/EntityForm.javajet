<%@ jet 
    package="chrome.xmdl.core.templates.ui.web.form.impl" 
    imports="java.util.* 
            chrome.xmdl.* 
            chrome.xmdl.gen.util.*
            org.eclipse.emf.codegen.util.*"
    class="EntityFormImpl" 
%><%
    XClass xClass = (XClass) argument;
    XPackage xPackage = xClass.getXPackage();
     
    ClassHelper helper = XMDLClassHelper.INSTANCE;
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");    
    %>
<%ImportManager importManager=null;%>
<%if (helper.getQualifiedName(xPackage) != null) {%>
<%importManager = helper.makeImportManager(helper.getQualifiedName(xPackage));%>
package <%=helper.getQualifiedName(xPackage)%>.ui.web.form;
<%} else {%>
<%importManager = helper.makeImportManager("");%>
<%}%>

<%importManager.addImport(xPackage.getName() + ".model.*");%>
<%importManager.addImport(xPackage.getName() + ".model.impl.*");%>
<%importManager.addImport("chrome.xmdl.lib.ui.web.form.*");%>
<%importManager.addImport("org.apache.struts.action.*");%>
<%importManager.addImport("javax.servlet.http.*");%>
<%importManager.addImport("java.io.*");%>
<%
    StringBuffer importStringBuffer = stringBuffer;
    int importInsertionPoint = stringBuffer.length();
    importManager.addCompilationUnitImports(stringBuffer.toString());
%>

/** 
 * @generated
 */
public class <%=helper.getCapName(xClass)%>Form extends AbstractForm
        implements Serializable{

	/** 
	 * @generated
	 */
    private Long[] deleteID = new Long[0];

	/** 
	 * @generated
	 */
    private <%=xClass.getName()%> <%=helper.uncapName(xClass.getName())%> = new <%=xClass.getName()%>Impl();

	/** 
	 * @generated
	 */
    private <%=xClass.getName()%>Search <%=helper.uncapName(xClass.getName())%>Search = new <%=xClass.getName()%>SearchImpl();

	<% if (MasterChildHelper.INST.isChild(xClass)) { 
		   XClass master = MasterChildHelper.INST.getMaster(xClass);
		   if (master != null) { %>
	/** 
	 * @generated
	 */
    private long <%=helper.uncapSafeName(master)%>ID = 0;

	/** 
	 * @generated
	 */
    public long get<%=master.getName()%>ID() {
        return <%=helper.uncapSafeName(master)%>ID;
    }

	/** 
	 * @generated
	 */
    public void set<%=master.getName()%>ID(long <%=helper.uncapSafeName(master)%>ID) {
        this.<%=helper.uncapSafeName(master)%>ID = <%=helper.uncapSafeName(master)%>ID;
    }
		   <%}
	   } %>

	
<%for (Iterator<XAttribute> i= xClass.getAttributes().iterator(); i.hasNext();) {
    XAttribute attribute = (XAttribute) i.next();%>
<%if (attribute.getType() instanceof XEnumeration) {%>
	<%XEnumeration xenum = (XEnumeration ) attribute.getType();%>
	/** 
	 * @generated
	 */
    public int <%=helper.getGetAccessor(attribute)%>() {
        return get<%=xClass.getName()%>().<%=helper.getGetAccessor(attribute)%>().getOrdinal();
    }

	/** 
	 * @generated
	 */
    public void set<%=helper.getAccessorName(attribute)%>(int value) {
        get<%=xClass.getName()%>().set<%=helper.getAccessorName(attribute)%>(<%=helper.getCapName(xenum)%>.valueOf(value));
    }
	
<%}//if (attribute.getType() !=null%>
<%}//for%>
	
    /**
     * Default empty constructor.
	 * @generated
     */
    public <%=xClass.getName()%>Form() {
    }

	/** 
	 * @generated
	 */
    public <%=xClass.getName()%> get<%=xClass.getName()%>() {
        return <%=helper.uncapName(xClass.getName())%>;
    }

	/** 
	 * @generated
	 */
    public void set<%=xClass.getName()%>(<%=xClass.getName()%> <%=helper.uncapName(xClass.getName())%>) {
        this.<%=helper.uncapName(xClass.getName())%> = <%=helper.uncapName(xClass.getName())%>;
    }

	/** 
	 * @generated
	 */
    public <%=xClass.getName()%>Search get<%=xClass.getName()%>Search() {
        return <%=helper.uncapName(xClass.getName())%>Search;
    }

	/** 
	 * @generated
	 */
    public void set<%=xClass.getName()%>(<%=xClass.getName()%>Search <%=helper.uncapName(xClass.getName())%>Search) {
        this.<%=helper.uncapName(xClass.getName())%>Search = <%=helper.uncapName(xClass.getName())%>Search;
    }

	/** 
	 * @generated
	 */
    public Long[] getDeleteID() {
        return deleteID;
    }

	/** 
	 * @generated
	 */
    public void setDeleteID(Long[] deleteID) {
        this.deleteID = deleteID;
    }

    /**
     * @see org.apache.struts.action.ActionForm#reset(org.apache.struts.action.ActionMapping,
     *      javax.servlet.http.HttpServletRequest)
	 * @generated
     */
    public void reset(ActionMapping mapping, HttpServletRequest request) {
        // reset any boolean data types to false
        <%=helper.uncapName(xClass.getName())%> = new <%=xClass.getName()%>Impl();
        <%=helper.uncapName(xClass.getName())%>Search = new <%=xClass.getName()%>SearchImpl();
        deleteID = null;
    }
}
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>
