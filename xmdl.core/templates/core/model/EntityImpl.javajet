<%@ jet 
    package="org.xmdl.core.templates.model.impl" 
    imports="java.util.* 
            org.xmdl.xmdl.*
            org.xmdl.gen.util.*
            org.eclipse.emf.codegen.util.*"
    class="EntityImplTemplateImpl" %>    
<%
    XClass xClass = (XClass) argument;
    XPackage xPackage = xClass.getXPackage(); 
    ClassHelper helper = XMDLEntityHelper.INSTANCE;    
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");
    %>
<%ImportManager importManager=null;%>
<%if (helper.getQualifiedName(xPackage) != null) {%>
<%importManager = helper.makeImportManager(helper.getQualifiedName(xPackage));%>
package <%=helper.getQualifiedName(xPackage)%>.model.impl;
<%} else {%>
<%importManager = helper.makeImportManager("");%>
<%}%>

<%importManager.addImport("java.util.*");%>
<%importManager.addImport("org.xmdl.lib.dao.*");%>
<%importManager.addImport(helper.getQualifiedName(xPackage)+".*");%>
<%importManager.addImport(helper.getQualifiedName(xPackage)+".model.*");%>

<%
    StringBuffer importStringBuffer = stringBuffer;
    int importInsertionPoint = stringBuffer.length();
    importManager.addCompilationUnitImports(stringBuffer.toString());
%>
/** 
 * $Id$       
 * @generated
 */ 
public class <%=helper.getCapName(xClass)%>Impl extends AbstractEntity implements <%=helper.getCapName(xClass)%> {

    /**
     * @generated
     */
    public <%=helper.getCapName(xClass)%>Impl() { }
        
<%for (Iterator<XAttribute> i= xClass.getAttributes().iterator(); i.hasNext();) {
    XAttribute attribute = (XAttribute) i.next();%>
<%if (attribute.getType() != null) {%>
    /** 
     * @generated
     */
    private <%=helper.getImportedAttributeType(attribute)%> <%=helper.uncapSafeName(attribute)%> = <%=helper.getDefaultValue(attribute)%>;
<%}%>
<%}%>


<%for (Iterator<XAttribute> i= xClass.getAttributes().iterator(); i.hasNext();) {
    XAttribute attribute = (XAttribute) i.next();%>
<%if (attribute.getType() != null) {%>
    /**
     * @generated
     */
    public <%=helper.getImportedAttributeType(attribute)%> <%=helper.getGetAccessor(attribute)%>() {
        return <%=helper.uncapSafeName(attribute)%>;
    }

    /**
     * @generated
     */
    public void set<%=helper.getAccessorName(attribute)%>(<%=helper.getImportedAttributeType(attribute)%> new<%=helper.getCapName(attribute)%>)    {
        this.<%=helper.uncapSafeName(attribute)%> = new<%=helper.getCapName(attribute)%>;
    }
<%}//if (attribute.getType() !=null%>
<%}//for%>

    /**
     * @generated
     */
    public String toString() {
        StringBuffer sb = new StringBuffer();
        sb.append(getClass().toString());
        sb.append("(");
        sb.append(getID());
        sb.append(")");
<%for (Iterator<XAttribute> i= xClass.getSimpleAttributes().iterator(); i.hasNext();) {
    XAttribute attribute = (XAttribute) i.next();%>
<%if (attribute.getType() != null && !attribute.isReference()) {%>
        sb.append("[<%=attribute.getName()%>:");
        sb.append(<%=helper.getGetAccessor(attribute)%>());
        sb.append("]");
<%}//if (attribute.getType() !=null%>
<%}//for%>
        return sb.toString();
    }

} //<%=helper.getCapName(xClass)%>
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>