package chrome.xmdl.core.templates.service.impl;

import java.util.*;
import chrome.xmdl.*;
import chrome.xmdl.core.util.*;
import chrome.xmdl.gen.util.*;
import org.eclipse.emf.codegen.util.*;

public class EntityServiceImplTemplateImpl
{
  protected static String nl;
  public static synchronized EntityServiceImplTemplateImpl create(String lineSeparator)
  {
    nl = lineSeparator;
    EntityServiceImplTemplateImpl result = new EntityServiceImplTemplateImpl();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "    ";
  protected final String TEXT_2 = NL + "package ";
  protected final String TEXT_3 = ".bo.impl;";
  protected final String TEXT_4 = "    " + NL;
  protected final String TEXT_5 = NL + NL + "/** " + NL + " * @generated" + NL + " */" + NL + "public class ";
  protected final String TEXT_6 = "ServiceImpl extends AbstractEntityService<";
  protected final String TEXT_7 = ">" + NL + "        implements ";
  protected final String TEXT_8 = "Service {" + NL + "        " + NL + "\t/** " + NL + "\t * @generated" + NL + "\t */" + NL + "    private static final Log LOGGER = LogFactory.getLog(";
  protected final String TEXT_9 = "ServiceImpl.class);" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    protected ";
  protected final String TEXT_10 = "DAO dao;" + NL + "" + NL + "\t/** " + NL + "\t * @generated" + NL + "\t */" + NL + "    public ";
  protected final String TEXT_11 = "ServiceImpl() {" + NL + "        LOGGER.debug(\"creating ";
  protected final String TEXT_12 = "ServiceImpl\");" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public ";
  protected final String TEXT_13 = "DAO get";
  protected final String TEXT_14 = "DAO() {" + NL + "        return dao;" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public void set";
  protected final String TEXT_15 = "DAO(";
  protected final String TEXT_16 = "DAO dao) {" + NL + "        this.dao = dao;" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public DAO<";
  protected final String TEXT_17 = "> getDAO() {" + NL + "        return get";
  protected final String TEXT_18 = "DAO();" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public void putEntity(Context context, ";
  protected final String TEXT_19 = " ";
  protected final String TEXT_20 = ") {" + NL + "        context.put(";
  protected final String TEXT_21 = "_KEY, ";
  protected final String TEXT_22 = ");" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public ";
  protected final String TEXT_23 = " getEntity(Context context) {" + NL + "        return (";
  protected final String TEXT_24 = ") context.get(";
  protected final String TEXT_25 = "_KEY);" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public void putID(Context context, Long id) {" + NL + "        context.put(";
  protected final String TEXT_26 = "_ID_KEY, id);" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public Long getID(Context context) {" + NL + "        return (Long) context.get(";
  protected final String TEXT_27 = "_ID_KEY);" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public void putEntityList(Context context, List<";
  protected final String TEXT_28 = "> ";
  protected final String TEXT_29 = "s) {" + NL + "        context.put(";
  protected final String TEXT_30 = "_LIST_KEY, ";
  protected final String TEXT_31 = "s);" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public List<";
  protected final String TEXT_32 = "> getEntityList(Context context) {" + NL + "        return (List<";
  protected final String TEXT_33 = ">) context.get(";
  protected final String TEXT_34 = "_LIST_KEY);" + NL + "    }" + NL + "" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public Object getKeys(Context context) {" + NL + "        return context.get(";
  protected final String TEXT_35 = "_ID_KEY);" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public SearchBean<";
  protected final String TEXT_36 = "> getSearchBean(Context context) {" + NL + "        return (SearchBean<";
  protected final String TEXT_37 = ">) context.get(";
  protected final String TEXT_38 = "_SEARCH_KEY);" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public void putSearchBean(Context context, SearchBean<";
  protected final String TEXT_39 = "> searchBean) {" + NL + "        context.put(";
  protected final String TEXT_40 = "_SEARCH_KEY, searchBean);" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    protected ";
  protected final String TEXT_41 = " merge(";
  protected final String TEXT_42 = " ";
  protected final String TEXT_43 = "1, ";
  protected final String TEXT_44 = " ";
  protected final String TEXT_45 = "2) {";
  protected final String TEXT_46 = NL + "        ";
  protected final String TEXT_47 = " ";
  protected final String TEXT_48 = " = ";
  protected final String TEXT_49 = "1;" + NL + "        //todo" + NL + "        return ";
  protected final String TEXT_50 = ";" + NL + "    }" + NL + "     /** " + NL + "     * @generated" + NL + "     */" + NL + "\tpublic void putEntity(Context context, ";
  protected final String TEXT_51 = "Service entity) {" + NL + "\t\tcontext.put(";
  protected final String TEXT_52 = "_KEY,entity);" + NL + "\t\t" + NL + "\t}" + NL + "     /** " + NL + "     * @generated" + NL + "     */\t" + NL + "" + NL + "\t";
  protected final String TEXT_53 = NL + "\t\t   " + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "\tprivate ";
  protected final String TEXT_54 = "DAO ";
  protected final String TEXT_55 = "DAO=null; \t   " + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "     public void set";
  protected final String TEXT_56 = "DAO(";
  protected final String TEXT_57 = "DAO dao){" + NL + "     \tthis.";
  protected final String TEXT_58 = "DAO=dao;" + NL + "     }" + NL + "     " + NL + "     " + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "\tpublic ";
  protected final String TEXT_59 = "DAO get";
  protected final String TEXT_60 = "DAO(){" + NL + "     \treturn ";
  protected final String TEXT_61 = "DAO;" + NL + "     }     " + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public boolean edit(Context context) throws Exception {" + NL + "        LOGGER.debug(\"edit.execute\");" + NL + "        Identifier identifier = createIdentifier(context);" + NL + "" + NL + "        List<";
  protected final String TEXT_62 = "> list = getEntityList(context);" + NL + "        if (LOGGER.isDebugEnabled()) {" + NL + "            int s = list == null ? 0 : list.size();" + NL + "            LOGGER.debug(\"list.size() = \" + s);" + NL + "        }" + NL;
  protected final String TEXT_63 = NL + "        ";
  protected final String TEXT_64 = " entity = getEntity(context);" + NL + "        LOGGER.debug(\"entity = \" + entity);" + NL + "" + NL + "        Serializable masterID = (Serializable) context.get(";
  protected final String TEXT_65 = "Service.";
  protected final String TEXT_66 = "_ID_KEY);";
  protected final String TEXT_67 = NL + "        ";
  protected final String TEXT_68 = " ";
  protected final String TEXT_69 = " =(";
  protected final String TEXT_70 = ") get";
  protected final String TEXT_71 = "DAO().load(masterID, identifier);" + NL + "        entity.set";
  protected final String TEXT_72 = "(";
  protected final String TEXT_73 = ");" + NL + "        context.put(";
  protected final String TEXT_74 = "Service.";
  protected final String TEXT_75 = "_KEY, ";
  protected final String TEXT_76 = ");" + NL + "" + NL + "        if (list == null) {" + NL + "            List<";
  protected final String TEXT_77 = "> all = get";
  protected final String TEXT_78 = "DAO().findBy(";
  protected final String TEXT_79 = ", identifier);" + NL + "            putEntityList(context, all);" + NL + "        }" + NL + "" + NL + "        LOGGER.debug(\"entity.get";
  protected final String TEXT_80 = "() = \" + entity.get";
  protected final String TEXT_81 = "());" + NL + "" + NL + "        Boolean copy = (Boolean) context.get(COPY_KEY);" + NL + "        if (copy == null) copy = Boolean.FALSE;" + NL + "        LOGGER.debug(\"copy = \" + copy);" + NL + "        Long id = (Long) entity.getID();" + NL + "        LOGGER.debug(\"masterID = \" + id);" + NL + "        if (id > 0) {";
  protected final String TEXT_82 = NL + "            ";
  protected final String TEXT_83 = " dbEntity = getDAO().load(id, identifier);" + NL + "            if (copy) {";
  protected final String TEXT_84 = NL + "                ";
  protected final String TEXT_85 = " e = getDAO().newEntity();" + NL + "                BeanUtils.copyProperties(e, dbEntity);" + NL + "                dbEntity = e;" + NL + "                dbEntity.setID(0);" + NL + "            }" + NL + "            LOGGER.debug(\"dbEntity = \" + dbEntity);" + NL + "            putEntity(context, dbEntity);" + NL + "        }" + NL + "        return true;" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public boolean save(Context context) throws Exception {" + NL + "        LOGGER.debug(\"save.execute\");" + NL;
  protected final String TEXT_86 = NL + "        ";
  protected final String TEXT_87 = " originalE = getEntity(context);" + NL + "        Identifier identifier = createIdentifier(context);" + NL;
  protected final String TEXT_88 = NL + "        ";
  protected final String TEXT_89 = " entity = getDAO().newEntity();" + NL + "        BeanUtils.copyProperties(entity, originalE);" + NL + "" + NL + "        Serializable masterID = (Serializable) context.get(";
  protected final String TEXT_90 = "Service.";
  protected final String TEXT_91 = "_ID_KEY);";
  protected final String TEXT_92 = NL + "        ";
  protected final String TEXT_93 = " ";
  protected final String TEXT_94 = " = ( ";
  protected final String TEXT_95 = " )get";
  protected final String TEXT_96 = "DAO().load(masterID, identifier);" + NL + "        entity.set";
  protected final String TEXT_97 = "(";
  protected final String TEXT_98 = ");" + NL + "        context.put(";
  protected final String TEXT_99 = "Service.";
  protected final String TEXT_100 = "_KEY, ";
  protected final String TEXT_101 = ");" + NL + "" + NL + "        getDAO().dbModify(entity, identifier);" + NL + "" + NL + "        List<";
  protected final String TEXT_102 = "> all = get";
  protected final String TEXT_103 = "DAO().findBy(";
  protected final String TEXT_104 = ", identifier);" + NL + "        putEntity(context, entity);" + NL + "        putEntityList(context, all);" + NL + "        return true;" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * @generated" + NL + "     */" + NL + "    public boolean delete(Context context) throws Exception {" + NL + "        LOGGER.debug(\"delete.execute\");" + NL + "" + NL + "        Identifier identifier = createIdentifier(context);" + NL + "" + NL + "        Object oKeys = getKeys(context);" + NL + "        Serializable[] keys = extractKeys(oKeys);" + NL + "        LOGGER.debug(\"keys = \" + keys);" + NL + "" + NL + "        getDAO().dbDelete(keys, identifier);" + NL + "" + NL + "        Serializable masterID = (Serializable) context.get(";
  protected final String TEXT_105 = "Service.";
  protected final String TEXT_106 = "_ID_KEY);" + NL + "        LOGGER.debug(\"masterID = \" + masterID);";
  protected final String TEXT_107 = NL + "        ";
  protected final String TEXT_108 = " ";
  protected final String TEXT_109 = " = ( ";
  protected final String TEXT_110 = " ) get";
  protected final String TEXT_111 = "DAO().load(masterID, identifier);" + NL + "        context.put(";
  protected final String TEXT_112 = "Service.";
  protected final String TEXT_113 = "_KEY, ";
  protected final String TEXT_114 = ");" + NL + "" + NL + "        List<";
  protected final String TEXT_115 = "> all = get";
  protected final String TEXT_116 = "DAO().findBy(";
  protected final String TEXT_117 = ", identifier);" + NL + "        LOGGER.debug(\"all.size() = \" + all.size());" + NL + "        putEntityList(context, all);" + NL + "" + NL + "        return true;" + NL + "    }" + NL + "\t\t   ";
  protected final String TEXT_118 = NL + NL + "}";
  protected final String TEXT_119 = NL + "    ";
  protected final String TEXT_120 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    
    XClass xClass = (XClass) argument;
    XPackage xPackage = xClass.getXPackage();
    XProject  xProject = xPackage.getProject(); 
     
    DBHelper dbHelper = XMDLDBHelper.INSTANCE;    
    ClassHelper helper = XMDLClassHelper.INSTANCE;
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");    
    
    stringBuffer.append(TEXT_1);
    ImportManager importManager=null;
    if (helper.getQualifiedName(xPackage) != null) {
    importManager = helper.makeImportManager(helper.getQualifiedName(xPackage));
    stringBuffer.append(TEXT_2);
    stringBuffer.append(helper.getQualifiedName(xPackage));
    stringBuffer.append(TEXT_3);
    } else {
    importManager = helper.makeImportManager("");
    }
    stringBuffer.append(TEXT_4);
    
importManager.addImport("org.apache.commons.logging.*");
importManager.addImport("org.apache.commons.chain.*");
importManager.addImport("java.util.*");
importManager.addImport("java.io.Serializable");
importManager.addImport("org.apache.commons.beanutils.BeanUtils"); 
 
 


importManager.addImport("chrome.xmdl.lib.dao.*");
importManager.addImport("chrome.xmdl.lib.bo.*");
importManager.addImport(helper.getQualifiedName(xPackage) + ".bo.*");
importManager.addImport(helper.getQualifiedName(xPackage) + ".dao.*");
importManager.addImport(helper.getQualifiedName(xPackage) + ".model.*");

    StringBuffer importStringBuffer = stringBuffer;
    int importInsertionPoint = stringBuffer.length();
    importManager.addCompilationUnitImports(stringBuffer.toString());

    stringBuffer.append(TEXT_5);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_10);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_12);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_13);
    stringBuffer.append(helper.getCapName(xClass));
    stringBuffer.append(TEXT_14);
    stringBuffer.append(helper.getCapName(xClass));
    stringBuffer.append(TEXT_15);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(helper.getCapName(xClass));
    stringBuffer.append(TEXT_17);
    stringBuffer.append(helper.getCapName(xClass));
    stringBuffer.append(TEXT_18);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_19);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_20);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_21);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_22);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_23);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_24);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_25);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_26);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_27);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_28);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_29);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_30);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_31);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_32);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_33);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_34);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_35);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_36);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_37);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_38);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_39);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_40);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_41);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_42);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_43);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_44);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_45);
    stringBuffer.append(TEXT_46);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_47);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_48);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_49);
    stringBuffer.append(helper.uncapName(xClass.getName()));
    stringBuffer.append(TEXT_50);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_51);
    stringBuffer.append(helper.capAllName(xClass.getName()));
    stringBuffer.append(TEXT_52);
    	XClass master = null;
		if (MasterChildHelper.INST.isChild(xClass)) { 
		   master = MasterChildHelper.INST.getMaster(xClass);
		   if (master != null) { 
    stringBuffer.append(TEXT_53);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_54);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_55);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_56);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_57);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_58);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_59);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_60);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_61);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_62);
    stringBuffer.append(TEXT_63);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_64);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_65);
    stringBuffer.append(helper.capAllName(master.getName()));
    stringBuffer.append(TEXT_66);
    stringBuffer.append(TEXT_67);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_68);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_69);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_70);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_71);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_72);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_73);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_74);
    stringBuffer.append(helper.capAllName(master.getName()));
    stringBuffer.append(TEXT_75);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_76);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_77);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_78);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_79);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_80);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_81);
    stringBuffer.append(TEXT_82);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_83);
    stringBuffer.append(TEXT_84);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_85);
    stringBuffer.append(TEXT_86);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_87);
    stringBuffer.append(TEXT_88);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_89);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_90);
    stringBuffer.append(helper.capAllName(master.getName()));
    stringBuffer.append(TEXT_91);
    stringBuffer.append(TEXT_92);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_93);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_94);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_95);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_96);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_97);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_98);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_99);
    stringBuffer.append(helper.capAllName(master.getName()));
    stringBuffer.append(TEXT_100);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_101);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_102);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_103);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_104);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_105);
    stringBuffer.append(helper.capAllName(master.getName()));
    stringBuffer.append(TEXT_106);
    stringBuffer.append(TEXT_107);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_108);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_109);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_110);
    stringBuffer.append(master.getName());
    stringBuffer.append(TEXT_111);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_112);
    stringBuffer.append(helper.capAllName(master.getName()));
    stringBuffer.append(TEXT_113);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_114);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_115);
    stringBuffer.append(xClass.getName());
    stringBuffer.append(TEXT_116);
    stringBuffer.append(helper.uncapName(master.getName()));
    stringBuffer.append(TEXT_117);
    }
	   } 
    stringBuffer.append(TEXT_118);
    importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());
    stringBuffer.append(TEXT_119);
    stringBuffer.append(TEXT_120);
    return stringBuffer.toString();
  }
}
