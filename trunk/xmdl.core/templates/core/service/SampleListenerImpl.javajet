<%@ jet 
    package="chrome.xmdl.core.templates.service.impl" 
    imports="chrome.xmdl.*
             chrome.xmdl.gen.util.*
             org.eclipse.emf.codegen.util.*"
    class="SampleListenerImplTemplateImpl" 
%><%
    XProject xProject = (XProject) argument;
    XPackage xPackage = (XPackage) xProject.getPackages().get(0);
     
    ClassHelper helper = XMDLClassHelper.INSTANCE;
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");    
    %>
<%ImportManager importManager=null;%>
<%if (helper.getQualifiedName(xPackage) != null) {%>
<%importManager = helper.makeImportManager(helper.getQualifiedName(xPackage));%>
package <%=helper.getQualifiedName(xPackage)%>.bo.impl;
<%} else {%>
<%importManager = helper.makeImportManager("");%>
<%}%>

<%importManager.addImport("chrome.xmdl.lib.bo.*");%>
<%importManager.addImport("org.apache.commons.logging.*");%>
<%importManager.addImport(helper.getQualifiedName(xPackage)+".bo.SampleListener");%>

<%
    StringBuffer importStringBuffer = stringBuffer;
    int importInsertionPoint = stringBuffer.length();
    importManager.addCompilationUnitImports(stringBuffer.toString());
%>

/**
 * SampleListenerImpl.
 *
 * @author mca
 * @author hd
 * @version 1.0
 * @generated
 */
public class SampleListenerImpl implements SampleListener{

    /**
     * @generated
     */
    private static final Log LOGGER = LogFactory.getLog(SampleListenerImpl.class);

    /**
     * @generated
     */
    public SampleListenerImpl() {
        onInitialize();
    }

    /**
     * @generated
     */
    protected void onInitialize() {
        LOGGER.debug(getClass().getName() + " initialized.");
        //do nothing
    }
}
<%importStringBuffer.insert(importInsertionPoint, importManager.computeSortedImports());%>