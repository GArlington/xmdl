<%@taglib prefix="c" id="org.eclipse.jet.controlTags" %>
<%@taglib prefix="w" id="org.eclipse.jet.workspaceTags" %>
<%@taglib prefix="j" id="org.eclipse.jet.javaTags" %>
<%@taglib prefix="f" id="org.eclipse.jet.formatTags" %>
<%@taglib prefix="xc" id="xmdl.genext.xmdlClass" %>
<%@jet 
	package="org.xmdl.ida.templates.core.dao" 
	class="EntityDAOHibernateImpl" 
	%><%
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");    
%>
package <xc:qualifiedName element="$xClass/xPackage"/>.dao.hibernate;

/**
 *
 * <xc:cap element="$xClass"/> DAO Hibernate implementation
 *  
 * $Id$
 *
 * @generated
 */ 
public class <xc:cap element="$xClass"/>DAOHibernate extends GenericDaoHibernate<<xc:cap element="$xClass"/>, Long> implements <xc:cap element="$xClass"/>Dao {

    public <xc:cap element="$xClass"/>DAOHibernate() {
        super(<xc:cap element="$xClass"/>.class);
    }

    public Collection<<xc:cap element="$xClass"/>> search(<xc:cap element="$xClass"/>Search <xc:uncap element="$xClass"/>Search) {
    	if (log.isDebugEnabled()) {
    		log.debug("search(<xc:cap element="$xClass"/>Search <xc:uncap element="$xClass"/>Search) <-");
        	log.debug("<xc:uncap element="$xClass"/>Search: " + <xc:uncap element="$xClass"/>Search);
    	}
    	
		Collection<<xc:cap element="$xClass"/>> list = null;
		if (<xc:uncap element="$xClass"/>Search == null) {
			list = new ArrayList<<xc:cap element="$xClass"/>>();
		} else {
<c:iterate select="$xClass/attributes" var="attribute">
	<c:if test="!$attribute/reference">
		<c:choose>
		<c:when test="$attribute/type/comparable">
			<xc:attributeType attribute="$attribute"/> min<xc:cap element="$attribute"/> = <xc:uncap element="$xClass"/>Search.<xc:accessor attribute="$attribute"/>Min();
			<xc:attributeType attribute="$attribute"/> max<xc:cap element="$attribute"/> = <xc:uncap element="$xClass"/>Search.<xc:accessor attribute="$attribute"/>Max();
		</c:when>
		<c:otherwise>
			<xc:attributeType attribute="$attribute"/> <xc:uncap element="$attribute"/> = <xc:uncap element="$xClass"/>Search.<xc:accessor attribute="$attribute"/>();
		</c:otherwise>
		</c:choose>
	</c:if>
</c:iterate> 

			list = search(name, fromPrice, toPrice, productType);
		}

		if (log.isDebugEnabled())
			log.debug("search(<xc:cap element="$xClass"/>Search <xc:uncap element="$xClass"/>Search) ->");
    	return list;
    }

<%
	StringBuffer params = new StringBuffer();
   	for (Iterator<XAttribute> i= xClass.getAttributes().iterator(); i.hasNext();) {
		XAttribute attribute = (XAttribute) i.next();
		if (!attribute.isReference()) {
			XType type = attribute.getType();
			boolean comparable = type.isComparable();
			if (comparable){
				params.append(helper.getImportedAttributeType(attribute));
				params.append(" min");
				params.append(helper.getCapName(attribute));
				params.append(", ");
				params.append(helper.getImportedAttributeType(attribute));
				params.append(" max");
				params.append(helper.getCapName(attribute));
			} else {
				params.append(helper.getImportedAttributeType(attribute));
				params.append(" ");
				params.append(helper.uncapSafeName(attribute));
			}
			if (i.hasNext()) params.append(", ");
		}
	}//for
%>

    public Collection<<xc:cap element="$xClass"/>> search(<%=params%>) {
    	if (log.isDebugEnabled()) {
    		log.debug("search(<%=params%>) <-");
<c:iterate select="$xClass/attributes" var="attribute">
	<c:if test="!$attribute/reference">
		<c:choose>
		<c:when test="$attribute/type/comparable">
        	log.debug("min<xc:cap element="$attribute"/>       : " + min<xc:cap element="$attribute"/>);
        	log.debug("max<xc:cap element="$attribute"/>       : " + max<xc:cap element="$attribute"/>);
		</c:when>
		<c:otherwise>
        	log.debug("<xc:uncap element="$attribute"/>       : " + <xc:uncap element="$attribute"/>);
		</c:otherwise>
		</c:choose>
	</c:if>
</c:iterate> 
    		
        Criteria criteria = getSession().createCriteria(<xc:cap element="$xClass"/>.class);
<c:iterate select="$xClass/attributes" var="attribute">
	<c:if test="!$attribute/reference">
		<c:choose>
		<c:when test="$attribute/type/className == 'java.lang.String'">
            criteria.add(Restrictions.like("<xc:uncap element="$attribute"/>", "%" + <xc:uncap element="$attribute"/> + "%"));
		</c:when>
		<c:when test="$attribute/type/comparable">
        if (min<xc:cap element="$attribute"/> != null)
            criteria.add(Restrictions.ge("<xc:uncap element="$attribute"/>", min<xc:cap element="$attribute"/>));
        if (max<xc:cap element="$attribute"/> != null)
            criteria.add(Restrictions.le("<xc:uncap element="$attribute"/>", max<xc:cap element="$attribute"/>));
		</c:when>
		<c:otherwise>
            criteria.add(Restrictions.eq("<xc:uncap element="$attribute"/>", <xc:uncap element="$attribute"/>));
		</c:otherwise>
		</c:choose>
	</c:if>
</c:iterate> 
        List<<xc:cap element="$xClass"/>> list = criteria.list();
        
        if (log.isDebugEnabled()) log.debug("search(<%=params%>) <-");
		return list;
    }

}
