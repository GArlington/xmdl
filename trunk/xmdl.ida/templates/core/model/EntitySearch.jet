<%@taglib prefix="c" id="org.eclipse.jet.controlTags" %>
<%@taglib prefix="w" id="org.eclipse.jet.workspaceTags" %>
<%@taglib prefix="j" id="org.eclipse.jet.javaTags" %>
<%@taglib prefix="f" id="org.eclipse.jet.formatTags" %>
<%@taglib prefix="xc" id="org.xmdl.genext.xmdlClass" %>
<%@jet 
    package="org.xmdl.ida.templates.core.model" 
    class="EntitySearchImpl"  
    %><%
    org.apache.log4j.Logger.getLogger(getClass()).debug(" generate ");    
%>
package <xc:qualifiedName element="$class/xPackage"/>.model.search;

<j:importsLocation package=""/>

<xc:import pattern="java.util.*" />
<xc:import pattern="java.io.Serializable" />
<xc:import pattern="java.text.MessageFormat" />
<xc:import pattern="$element.model.*" element="$class/xPackage"/>
<xc:importVirtual element="$class/xPackage/project"/>

/**
 *
 * <xc:cap element="$class"/> entity search bean
 *  
 * $Id$
 *
 * @generated
 */ 
public class <xc:cap element="$class"/>Search implements Serializable {
<c:iterate select="$class/attributes" var="attribute">
	<c:if test="not(isEmbeded($attribute/type))">
	    <c:choose>
	    <c:when test="call($attribute/type, 'isComparable')">

    /** 
     * @generated
     */
    private <xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:uncap element="$attribute"/>Min;

    /** 
     * @generated
     */
    private <xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:uncap element="$attribute"/>Max;
	    </c:when>
	    <c:otherwise>

    /** 
     * @generated
     */
    private <xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:uncap element="$attribute"/>;
	    </c:otherwise>
	    </c:choose>
    </c:if>
</c:iterate> 

    /** 
     * @generated
     */
    public <xc:cap element="$class"/>Search() {
    }

<c:iterate select="$class/attributes" var="attribute">
	<c:if test="not(isEmbeded($attribute/type))">
	    <c:choose>
	    <c:when test="call($attribute/type, 'isComparable')">

    /** 
     * @generated
     */
    public <xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:accessor attribute="$attribute"/>Min() {
        return <xc:uncap element="$attribute"/>Min;
    }

    /** 
     * @generated
     */
    public void set<xc:cap element="$attribute"/>Min(<xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:uncap element="$attribute"/>Min) {
        this.<xc:uncap element="$attribute"/>Min = <xc:uncap element="$attribute"/>Min;
    }

    /** 
     * @generated
     */
    public <xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:accessor attribute="$attribute"/>Max() {
        return <xc:uncap element="$attribute"/>Max;
    }

    /** 
     * @generated
     */
    public void set<xc:cap element="$attribute"/>Max(<xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:uncap element="$attribute"/>Max) {
        this.<xc:uncap element="$attribute"/>Max = <xc:uncap element="$attribute"/>Max;
    }
	    </c:when>
	    <c:otherwise>

    /** 
     * @generated
     */
    public <xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:accessor attribute="$attribute"/>() {
        return <xc:uncap element="$attribute"/>;
    }

    /** 
     * @generated
     */
    public void set<xc:cap element="$attribute"/>(<xc:attributeType attribute="$attribute" wrapType="true" wrapAssociation="false"/> <xc:uncap element="$attribute"/>) {
        this.<xc:uncap element="$attribute"/> = <xc:uncap element="$attribute"/>;
    }
	    </c:otherwise>
	    </c:choose>
    </c:if>

</c:iterate> 

    /** 
     * @generated
     */
	@Override
    public String toString() {
        return MessageFormat.format("<xc:cap element="$class"/>Search "<%int i=0;%>
        <c:iterate select="$class/attributes" var="attribute">
		<c:if test="not(isEmbeded($attribute/type))">
            <c:choose>
            <c:when test="call($attribute/type, 'isComparable')">
            + "[<xc:uncap element="$attribute"/>Min={<%=i++%>}]"
            + "[<xc:uncap element="$attribute"/>Max={<%=i++%>}]"
            </c:when>
            <c:otherwise>
            + "[<xc:uncap element="$attribute"/>={<%=i++%>}]"
            </c:otherwise>
            </c:choose>
        </c:if>
        </c:iterate> 
        <c:iterate select="$class/attributes" var="attribute">
		<c:if test="not(isEmbeded($attribute/type))">
            <c:choose>
            <c:when test="call($attribute/type, 'isComparable')">
            , <xc:uncap element="$attribute"/>Min
            , <xc:uncap element="$attribute"/>Max
            </c:when>
            <c:otherwise>
            , <xc:uncap element="$attribute"/>
            </c:otherwise>
            </c:choose>
        </c:if>
        </c:iterate>
        );
    }

    /** 
     * @generated
     */
	@Override
    public int hashCode() {
        int result = 1;
<c:iterate select="$class/attributes" var="attribute">
	<c:if test="not(isEmbeded($attribute/type))">
    <c:choose>
    <c:when test="call($attribute/type, 'isComparable')">
        <c:choose>
        <c:when test="call($attribute/type, 'isPrimitive')">
        if (<xc:uncap element="$attribute"/>Min != null) result = 31 * result + ("" + <xc:uncap element="$attribute"/>Min).hashCode();
        if (<xc:uncap element="$attribute"/>Max != null) result = 31 * result + ("" + <xc:uncap element="$attribute"/>Max).hashCode();
        </c:when>
        <c:otherwise>
        if (<xc:uncap element="$attribute"/>Min != null) result = 31 * result + <xc:uncap element="$attribute"/>Min.hashCode();
		if (<xc:uncap element="$attribute"/>Max != null) result = 31 * result + <xc:uncap element="$attribute"/>Max.hashCode();
        </c:otherwise>
        </c:choose>
    </c:when>
    <c:otherwise>
        <c:choose>
        <c:when test="call($attribute/type, 'isPrimitive')">
        if (<xc:uncap element="$attribute"/> != null) result = 31 * result + ("" + <xc:uncap element="$attribute"/>).hashCode();
        </c:when>
        <c:otherwise>
        if (<xc:uncap element="$attribute"/> != null) result = 31 * result + <xc:uncap element="$attribute"/>.hashCode();
        </c:otherwise>
        </c:choose>
    </c:otherwise>
    </c:choose>
    </c:if>
</c:iterate>
        return result;
    }

	@Override
	public boolean equals(Object obj) {
		return hashCode() == obj.hashCode();
	}

}
